#include <DHT.h>
#include <AsyncTimer.h>
#include <Vegemite.h>
#include <SoftPWM.h>

auto SOILMOIST_PIN = A6;
auto DHT22_PIN = A1;
auto FAN_PIN = A3;
auto PUMP_PIN = 16;
auto LAMP_PIN = 17;

SOFTPWM_DEFINE_CHANNEL(FAN_PIN);
DHT dht(DHT22_PIN, DHT22);
AsyncTimer t;
Vegemite v;

bool currentPumpWorking = false;

void setup() {
  Serial.begin(250000);
  SoftPWM.begin(490);
  dht.begin();

  pinMode(SOILMOIST_PIN, INPUT);
  pinMode(PUMP_PIN, OUTPUT);
  pinMode(LAMP_PIN, OUTPUT);
  Char* mode = "OFF"

//주기적으로 vegemite를 통해 config-auto, config-light, config-fan, pump-water에 대한 정보를 받아옴. 
  v.requestSubscription("config-auto");
  v.requestSubscription("config-light"); 
  v.requestSubscription("config-fan");
  v.requestSubscription("pump-water");

//1초 간격으로 온/습도, 토양습도 정보를 받아옴
  t.setInterval([]() { //온/습도 정보를 받아와서 vegemite로 전달
    int autoConf = int(v.recv("config-auto"));
    float humidity = dht.readHumidity();
    float temperature = dht.readTemperature();
  
    if (!isnan(humidity) && !isnan(temperature)) {
      v.send("temperature", temperature);
      v.send("humidity", humidity);
    }
  
    int soilMoist=map(analogRead(SOILMOIST_PIN), 0, 1023, 100, 0); //토양습도 정보를 받아와서 vegemite로 전달
    v.send("soilmoist", soilMoist);

    if (autoConf==1) { // Auto Mode가 켜져있을 때
      if(temperature < 25){ // 온도 25보다 높을 때, LED 켜짐
        digitalWrite(LAMP_PIN, HIGH);
      }
      else {
        digitalWrite(LAMP_PIN, LOW); // 온도 25 이하일 때, LED 꺼짐
      }

      if (humidity > 75) { // 습도가 75보다 높을 때, DC FAN: ON
        SoftPWM.set(100);
        delay(2000);
      }
      else { // 습도가 75 이하일 때, DC FAN: OFF
        SoftPWM.set(0);
        delay(2000);
      }

      if (humidity < 60){ // 습도가 60보다 낮을 때, 펌프: ON
        digitalWrite(PUMP_PIN, HIGH);
      }
      else { //습도가 60 이상일 때, 펌프: OFF
        digitalWrite(PUMP_PIN, LOW);
      }
       mode = "ON"
    } 
    

    else { // Auto Mode가 꺼져있을 때
      t.setInterval([]() {  //0.5초 주기로 interface에서 정보 받아옴
        int pumpWater = int(v.recv("pump-water"));
        int lightConf = int(v.recv("config-light"));
        int fanSpeed = int(v.recv("config-fan"));

        if (pumpWater == 1 && !currentPumpWorking) { //5초 동안 펌프 ON
          currentPumpWorking = true;
          v.send("pump-water", 0);
          digitalWrite(PUMP_PIN, HIGH);
          t.setTimeout([]() {
            digitalWrite(PUMP_PIN, LOW);
            currentPumpWorking = false;
          }, 5000);
       mode = "OFF"
        }

        digitalWrite(LAMP_PIN, lightConf==1? HIGH : LOW); // lightConf가 1이면 LED ON
        // 0, 1, 2 3단계로 DC FAN 작동
        if (fanSpeed==0) { // 0 단계일 때, DC FAN OFF
          SoftPWM.set(0);}
        else if (fanSpeed==1) { // 1 단계일 때, DC FAN 최저 속도
          SoftPWM.set(70);}
        else {
          SoftPWM.set(100);} // 2 단계일 때, DC FAN 최고 속도
      }, 500);
    }
  }, 1000);
}

void loop() {
  v.subscribe();
  t.handle(); //Asyntimer에 따른 동작 실행
}

void OLEDdraw(){
  u8g2.clearBuffer(); //버퍼 비우기

  u8g2.setFont(u8g2_font_ncenB08_te); //폰트 설정

  u8g2.drawStr(15, 10, "Automode."); //Automode를 OLED에 표시
  u8g2.print(mode);
